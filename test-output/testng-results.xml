<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="5" failed="0" total="6" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="684" started-at="2015-05-10T18:07:39Z" finished-at="2015-05-10T18:07:39Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="684" started-at="2015-05-10T18:07:39Z" finished-at="2015-05-10T18:07:39Z">
      <class name="com.FCI.SWE.ServicesModels.UserEntityTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.FCI.SWE.ServicesModels.UserEntityTest@6e180a5c]" name="setUp" is-config="true" duration-ms="108" started-at="2015-05-10T20:07:39Z" finished-at="2015-05-10T20:07:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="addFriend()[pri:0, instance:com.FCI.SWE.ServicesModels.UserEntityTest@6e180a5c]" name="addFriend" duration-ms="15" started-at="2015-05-10T20:07:39Z" finished-at="2015-05-10T20:07:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFriend -->
        <test-method status="FAIL" signature="tearDown()[pri:0, instance:com.FCI.SWE.ServicesModels.UserEntityTest@6e180a5c]" name="tearDown" is-config="true" duration-ms="0" started-at="2015-05-10T20:07:39Z" finished-at="2015-05-10T20:07:39Z">
          <exception class="java.util.ServiceConfigurationError">
            <message>
              <![CDATA[com.google.appengine.tools.development.LocalRpcService: Provider com.google.appengine.api.datastore.dev.LocalCloudDatastoreV1Service could not be instantiated]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.ServiceConfigurationError: com.google.appengine.tools.development.LocalRpcService: Provider com.google.appengine.api.datastore.dev.LocalCloudDatastoreV1Service could not be instantiated
	at java.util.ServiceLoader.fail(ServiceLoader.java:224)
	at java.util.ServiceLoader.access$100(ServiceLoader.java:181)
	at java.util.ServiceLoader$LazyIterator.next(ServiceLoader.java:377)
	at java.util.ServiceLoader$1.next(ServiceLoader.java:445)
	at com.google.appengine.tools.development.ApiProxyLocalImpl.startServices(ApiProxyLocalImpl.java:600)
	at com.google.appengine.tools.development.ApiProxyLocalImpl.access$700(ApiProxyLocalImpl.java:46)
	at com.google.appengine.tools.development.ApiProxyLocalImpl$2.run(ApiProxyLocalImpl.java:584)
	at com.google.appengine.tools.development.ApiProxyLocalImpl$2.run(ApiProxyLocalImpl.java:581)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.google.appengine.tools.development.ApiProxyLocalImpl.getService(ApiProxyLocalImpl.java:580)
	at com.google.appengine.tools.development.testing.LocalServiceTestHelper.getLocalService(LocalServiceTestHelper.java:589)
	at com.google.appengine.tools.development.testing.LocalDatastoreServiceTestConfig.getLocalDatastoreService(LocalDatastoreServiceTestConfig.java:294)
	at com.google.appengine.tools.development.testing.LocalDatastoreServiceTestConfig.tearDown(LocalDatastoreServiceTestConfig.java:288)
	at com.google.appengine.tools.development.testing.LocalServiceTestHelper.tearDownService(LocalServiceTestHelper.java:548)
	at com.google.appengine.tools.development.testing.LocalServiceTestHelper.tearDown(LocalServiceTestHelper.java:520)
	at com.FCI.SWE.ServicesModels.UserEntityTest.tearDown(UserEntityTest.java:37)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:517)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:732)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:352)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:347)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1032)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
Caused by: java.lang.NoSuchFieldError: EMPTY
	at com.google.apphosting.datastore.shared.Config$DatastoreConfig.<init>(Config.java:267)
	at com.google.apphosting.datastore.shared.Config$DatastoreConfig.<clinit>(Config.java:2282)
	at com.google.appengine.api.datastore.dev.LocalCloudDatastoreV1Service.<clinit>(LocalCloudDatastoreV1Service.java:139)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at java.lang.Class.newInstance(Class.java:379)
	at java.util.ServiceLoader$LazyIterator.next(ServiceLoader.java:373)
	... 39 more
]]>
            </full-stacktrace>
          </exception> <!-- java.util.ServiceConfigurationError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.FCI.SWE.ServicesModels.UserEntityTest@6e180a5c]" name="setUp" is-config="true" duration-ms="0" started-at="2015-05-10T20:07:39Z" finished-at="2015-05-10T20:07:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="getFriends()[pri:0, instance:com.FCI.SWE.ServicesModels.UserEntityTest@6e180a5c]" name="getFriends" duration-ms="1" started-at="2015-05-10T20:07:39Z" finished-at="2015-05-10T20:07:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getFriends -->
        <test-method status="SKIP" signature="tearDown()[pri:0, instance:com.FCI.SWE.ServicesModels.UserEntityTest@6e180a5c]" name="tearDown" is-config="true" duration-ms="0" started-at="2015-05-10T20:07:39Z" finished-at="2015-05-10T20:07:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.FCI.SWE.ServicesModels.UserEntityTest@6e180a5c]" name="setUp" is-config="true" duration-ms="0" started-at="2015-05-10T20:07:39Z" finished-at="2015-05-10T20:07:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="saveUser(java.lang.String, java.lang.String, java.lang.String, boolean)[pri:0, instance:com.FCI.SWE.ServicesModels.UserEntityTest@6e180a5c]" name="saveUser" duration-ms="1" started-at="2015-05-10T20:07:39Z" data-provider="saveProvider" finished-at="2015-05-10T20:07:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[hadad]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hadad.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[123]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- saveUser -->
        <test-method status="SKIP" signature="tearDown()[pri:0, instance:com.FCI.SWE.ServicesModels.UserEntityTest@6e180a5c]" name="tearDown" is-config="true" duration-ms="0" started-at="2015-05-10T20:07:39Z" finished-at="2015-05-10T20:07:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.FCI.SWE.ServicesModels.UserEntityTest@6e180a5c]" name="setUp" is-config="true" duration-ms="0" started-at="2015-05-10T20:07:39Z" finished-at="2015-05-10T20:07:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="saveUser(java.lang.String, java.lang.String, java.lang.String, boolean)[pri:0, instance:com.FCI.SWE.ServicesModels.UserEntityTest@6e180a5c]" name="saveUser" duration-ms="10" started-at="2015-05-10T20:07:39Z" data-provider="saveProvider" finished-at="2015-05-10T20:07:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[hadad]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hadad.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[123]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- saveUser -->
        <test-method status="SKIP" signature="tearDown()[pri:0, instance:com.FCI.SWE.ServicesModels.UserEntityTest@6e180a5c]" name="tearDown" is-config="true" duration-ms="0" started-at="2015-05-10T20:07:39Z" finished-at="2015-05-10T20:07:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="getUser(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.FCI.SWE.ServicesModels.UserEntityTest@6e180a5c]" name="getUser" duration-ms="0" started-at="2015-05-10T20:07:39Z" data-provider="getUserProvider" depends-on-methods="com.FCI.SWE.ServicesModels.UserEntityTest.saveUser" finished-at="2015-05-10T20:07:39Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method UserEntityTest.getUser(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.FCI.SWE.ServicesModels.UserEntityTest@6e180a5c] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method UserEntityTest.getUser(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.FCI.SWE.ServicesModels.UserEntityTest@6e180a5c] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1063)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:352)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:347)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1032)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUser -->
        <test-method status="SKIP" signature="isExist(java.lang.String, boolean)[pri:0, instance:com.FCI.SWE.ServicesModels.UserEntityTest@6e180a5c]" name="isExist" duration-ms="0" started-at="2015-05-10T20:07:39Z" data-provider="existProvider" depends-on-methods="com.FCI.SWE.ServicesModels.UserEntityTest.saveUser" finished-at="2015-05-10T20:07:39Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method UserEntityTest.isExist(java.lang.String, boolean)[pri:0, instance:com.FCI.SWE.ServicesModels.UserEntityTest@6e180a5c] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method UserEntityTest.isExist(java.lang.String, boolean)[pri:0, instance:com.FCI.SWE.ServicesModels.UserEntityTest@6e180a5c] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1063)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:352)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:347)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1032)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isExist -->
      </class> <!-- com.FCI.SWE.ServicesModels.UserEntityTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
