<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="13" passed="12">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="12425" started-at="2015-05-10T17:33:34Z" finished-at="2015-05-10T17:33:47Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="12425" started-at="2015-05-10T17:33:34Z" finished-at="2015-05-10T17:33:47Z">
      <class name="com.FCI.SWE.Services.NotificationServiceTest">
        <test-method status="PASS" signature="SendConversationMessage()[pri:0, instance:com.FCI.SWE.Services.NotificationServiceTest@12bfaa9a]" name="SendConversationMessage" duration-ms="63" started-at="2015-05-10T19:33:34Z" finished-at="2015-05-10T19:33:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SendConversationMessage -->
        <test-method status="PASS" signature="addToConversation()[pri:0, instance:com.FCI.SWE.Services.NotificationServiceTest@12bfaa9a]" name="addToConversation" duration-ms="2" started-at="2015-05-10T19:33:35Z" finished-at="2015-05-10T19:33:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addToConversation -->
        <test-method status="PASS" signature="createConversation()[pri:0, instance:com.FCI.SWE.Services.NotificationServiceTest@12bfaa9a]" name="createConversation" duration-ms="1" started-at="2015-05-10T19:33:35Z" finished-at="2015-05-10T19:33:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createConversation -->
        <test-method status="FAIL" signature="createMessage(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.FCI.SWE.Services.NotificationServiceTest@12bfaa9a]" name="createMessage" duration-ms="12156" started-at="2015-05-10T19:33:35Z" data-provider="UserProvider" finished-at="2015-05-10T19:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[fekry]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[hadad]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[hello]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[OK]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [OK] but found [Failed]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [OK] but found [Failed]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:165)
	at com.FCI.SWE.Services.NotificationServiceTest.createMessage(NotificationServiceTest.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:659)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:352)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:347)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1032)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createMessage -->
        <test-method status="PASS" signature="deleteFriendRequest()[pri:0, instance:com.FCI.SWE.Services.NotificationServiceTest@12bfaa9a]" name="deleteFriendRequest" duration-ms="2" started-at="2015-05-10T19:33:47Z" finished-at="2015-05-10T19:33:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteFriendRequest -->
        <test-method status="PASS" signature="getAllMessages()[pri:0, instance:com.FCI.SWE.Services.NotificationServiceTest@12bfaa9a]" name="getAllMessages" duration-ms="2" started-at="2015-05-10T19:33:47Z" finished-at="2015-05-10T19:33:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllMessages -->
        <test-method status="PASS" signature="getConversationMessages()[pri:0, instance:com.FCI.SWE.Services.NotificationServiceTest@12bfaa9a]" name="getConversationMessages" duration-ms="2" started-at="2015-05-10T19:33:47Z" finished-at="2015-05-10T19:33:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getConversationMessages -->
        <test-method status="PASS" signature="getFriendRequestByID()[pri:0, instance:com.FCI.SWE.Services.NotificationServiceTest@12bfaa9a]" name="getFriendRequestByID" duration-ms="2" started-at="2015-05-10T19:33:47Z" finished-at="2015-05-10T19:33:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getFriendRequestByID -->
        <test-method status="PASS" signature="getMessagesByID()[pri:0, instance:com.FCI.SWE.Services.NotificationServiceTest@12bfaa9a]" name="getMessagesByID" duration-ms="18" started-at="2015-05-10T19:33:47Z" finished-at="2015-05-10T19:33:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getMessagesByID -->
        <test-method status="PASS" signature="getUnseenConversationMessages()[pri:0, instance:com.FCI.SWE.Services.NotificationServiceTest@12bfaa9a]" name="getUnseenConversationMessages" duration-ms="2" started-at="2015-05-10T19:33:47Z" finished-at="2015-05-10T19:33:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnseenConversationMessages -->
        <test-method status="PASS" signature="getUnseenFriendRequests()[pri:0, instance:com.FCI.SWE.Services.NotificationServiceTest@12bfaa9a]" name="getUnseenFriendRequests" duration-ms="2" started-at="2015-05-10T19:33:47Z" finished-at="2015-05-10T19:33:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnseenFriendRequests -->
        <test-method status="PASS" signature="getUnseenMessages()[pri:0, instance:com.FCI.SWE.Services.NotificationServiceTest@12bfaa9a]" name="getUnseenMessages" duration-ms="1" started-at="2015-05-10T19:33:47Z" finished-at="2015-05-10T19:33:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnseenMessages -->
        <test-method status="PASS" signature="sendFriendRequest()[pri:0, instance:com.FCI.SWE.Services.NotificationServiceTest@12bfaa9a]" name="sendFriendRequest" duration-ms="1" started-at="2015-05-10T19:33:47Z" finished-at="2015-05-10T19:33:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendFriendRequest -->
      </class> <!-- com.FCI.SWE.Services.NotificationServiceTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
